{"version":3,"file":"static/js/934.8dd78f3a.chunk.js","mappings":"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","sources":["components/screens/SettingsScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useGame } from '../../contexts/GameContext';\r\n\r\n/**\r\n * SettingsScreen component\r\n * Allows users to adjust game settings like volume, text speed, and auto-save\r\n */\r\nconst SettingsScreen = () => {\r\n  const game = useGame();\r\n  \r\n  const handleVolumeChange = (type, value) => {\r\n    game.updateSettings({\r\n      volume: {\r\n        ...game.settings.volume,\r\n        [type]: parseFloat(value)\r\n      }\r\n    });\r\n  };\r\n  \r\n  const handleTextSpeedChange = (value) => {\r\n    game.updateSettings({\r\n      textSpeed: parseInt(value)\r\n    });\r\n  };\r\n  \r\n  const handleAutoSaveChange = (e) => {\r\n    game.updateSettings({\r\n      autoSave: e.target.checked\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div \r\n      className=\"settings-screen\"\r\n      role=\"region\"\r\n      aria-label=\"설정\"\r\n    >\r\n      <h1 id=\"settings-title\">설정</h1>\r\n      \r\n      <div className=\"settings-group\">\r\n        <h2 id=\"volume-settings\">볼륨</h2>\r\n        \r\n        <div className=\"setting\">\r\n          <label htmlFor=\"master-volume\">마스터 볼륨</label>\r\n          <input \r\n            id=\"master-volume\"\r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"1\" \r\n            step=\"0.1\" \r\n            value={game.settings.volume.master}\r\n            onChange={(e) => handleVolumeChange('master', e.target.value)}\r\n            aria-labelledby=\"volume-settings\"\r\n          />\r\n          <span aria-live=\"polite\">{Math.round(game.settings.volume.master * 100)}%</span>\r\n        </div>\r\n        \r\n        <div className=\"setting\">\r\n          <label htmlFor=\"music-volume\">음악 볼륨</label>\r\n          <input \r\n            id=\"music-volume\"\r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"1\" \r\n            step=\"0.1\" \r\n            value={game.settings.volume.bgm}\r\n            onChange={(e) => handleVolumeChange('bgm', e.target.value)}\r\n            aria-labelledby=\"volume-settings\"\r\n          />\r\n          <span aria-live=\"polite\">{Math.round(game.settings.volume.bgm * 100)}%</span>\r\n        </div>\r\n        \r\n        <div className=\"setting\">\r\n          <label htmlFor=\"sfx-volume\">효과음 볼륨</label>\r\n          <input \r\n            id=\"sfx-volume\"\r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"1\" \r\n            step=\"0.1\" \r\n            value={game.settings.volume.sfx}\r\n            onChange={(e) => handleVolumeChange('sfx', e.target.value)}\r\n            aria-labelledby=\"volume-settings\"\r\n          />\r\n          <span aria-live=\"polite\">{Math.round(game.settings.volume.sfx * 100)}%</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"settings-group\">\r\n        <h2 id=\"text-settings\">텍스트</h2>\r\n        \r\n        <div className=\"setting\">\r\n          <label htmlFor=\"text-speed\">텍스트 속도</label>\r\n          <input \r\n            id=\"text-speed\"\r\n            type=\"range\" \r\n            min=\"10\" \r\n            max=\"50\" \r\n            step=\"5\" \r\n            value={game.settings.textSpeed}\r\n            onChange={(e) => handleTextSpeedChange(e.target.value)}\r\n            aria-labelledby=\"text-settings\"\r\n          />\r\n          <span aria-live=\"polite\">{game.settings.textSpeed}ms</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"settings-group\">\r\n        <h2 id=\"game-settings\">게임</h2>\r\n        \r\n        <div className=\"setting checkbox\">\r\n          <label htmlFor=\"auto-save\">\r\n            <input \r\n              id=\"auto-save\"\r\n              type=\"checkbox\" \r\n              checked={game.settings.autoSave}\r\n              onChange={handleAutoSaveChange}\r\n              aria-labelledby=\"game-settings\"\r\n            />\r\n            자동 저장\r\n          </label>\r\n        </div>\r\n      </div>\r\n      \r\n      <button \r\n        className=\"back-button\" \r\n        onClick={() => game.setCurrentScreen('title')}\r\n        aria-label=\"타이틀 화면으로 돌아가기\"\r\n        style={{ position: 'absolute', bottom: '2rem' }}\r\n      >\r\n        타이틀로 돌아가기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;\r\n"],"names":["SettingsScreen","game","useGame","handleVolumeChange","type","value","updateSettings","volume","settings","parseFloat","_jsxs","className","role","children","_jsx","id","htmlFor","min","max","step","master","onChange","e","target","Math","round","bgm","sfx","textSpeed","handleTextSpeedChange","parseInt","checked","autoSave","onClick","setCurrentScreen","style","position","bottom"],"sourceRoot":""}