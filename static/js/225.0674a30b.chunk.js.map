{"version":3,"file":"static/js/225.0674a30b.chunk.js","mappings":"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","sources":["components/screens/AuthScreen.js","components/game/GameContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../contexts/GameContext';\r\nimport GameContainer from '../game/GameContainer';\r\nimport authService from '../../services/firebase/authService';\r\nimport soundEffects from '../../services/audio/soundEffects';\r\n\r\n// Authentication screen component\r\nconst AuthScreen = () => {\r\n  const game = useGame();\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [displayName, setDisplayName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  // Play background music\r\n  useEffect(() => {\r\n    // Play title music if not already playing\r\n    if (game.currentBgm !== 'MAIN_THEME') {\r\n      soundEffects.playMusic('MAIN_THEME', { volume: -12 });\r\n    }\r\n    \r\n    // Apply subtle atmospheric effect\r\n    soundEffects.applyAtmosphericEffect(0.3);\r\n    \r\n    // Clean up\r\n    return () => {\r\n      soundEffects.applyAtmosphericEffect(0);\r\n    };\r\n  }, [game.currentBgm]);\r\n  \r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      if (isLogin) {\r\n        // Login\r\n        await authService.login(email, password);\r\n        \r\n        // Set player name from display name\r\n        const user = authService.getCurrentUser();\r\n        if (user && user.displayName) {\r\n          game.setPlayerName(user.displayName);\r\n        }\r\n        \r\n        // Return to title screen\r\n        game.setCurrentScreen('title');\r\n      } else {\r\n        // Register\r\n        await authService.register(email, password, displayName);\r\n        \r\n        // Set player name\r\n        game.setPlayerName(displayName);\r\n        \r\n        // Return to title screen\r\n        game.setCurrentScreen('title');\r\n      }\r\n      \r\n      // Play success sound\r\n      soundEffects.playSfx('UI_CLICK');\r\n    } catch (error) {\r\n      console.error('Authentication error:', error);\r\n      setError(getErrorMessage(error));\r\n      \r\n      // Play error sound\r\n      soundEffects.playSfx('UI_CHOICE_SELECT');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Get user-friendly error message\r\n  const getErrorMessage = (error) => {\r\n    const errorCode = error.code;\r\n    \r\n    switch (errorCode) {\r\n      case 'auth/invalid-email':\r\n        return '유효하지 않은 이메일 주소입니다.';\r\n      case 'auth/user-disabled':\r\n        return '이 계정은 비활성화되었습니다.';\r\n      case 'auth/user-not-found':\r\n        return '해당 이메일로 등록된 계정을 찾을 수 없습니다.';\r\n      case 'auth/wrong-password':\r\n        return '비밀번호가 올바르지 않습니다.';\r\n      case 'auth/email-already-in-use':\r\n        return '이미 사용 중인 이메일입니다.';\r\n      case 'auth/weak-password':\r\n        return '비밀번호가 너무 약합니다. 최소 6자 이상 사용해주세요.';\r\n      default:\r\n        return '오류가 발생했습니다. 다시 시도해주세요.';\r\n    }\r\n  };\r\n  \r\n  // Toggle between login and register forms\r\n  const toggleForm = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n    soundEffects.playSfx('UI_CLICK');\r\n  };\r\n  \r\n  return (\r\n    <GameContainer backgroundImage=\"/assets/images/title_bg.jpg\">\r\n      <AuthContainer>\r\n        <Title>{isLogin ? '로그인' : '회원가입'}</Title>\r\n        \r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        \r\n        <AuthForm onSubmit={handleSubmit}>\r\n          <FormField>\r\n            <FormLabel>이메일</FormLabel>\r\n            <FormInput\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </FormField>\r\n          \r\n          <FormField>\r\n            <FormLabel>비밀번호</FormLabel>\r\n            <FormInput\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </FormField>\r\n          \r\n          {!isLogin && (\r\n            <FormField>\r\n              <FormLabel>닉네임</FormLabel>\r\n              <FormInput\r\n                type=\"text\"\r\n                value={displayName}\r\n                onChange={(e) => setDisplayName(e.target.value)}\r\n                required\r\n                disabled={isLoading}\r\n                maxLength={20}\r\n              />\r\n            </FormField>\r\n          )}\r\n          \r\n          <FormButton type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? '처리 중...' : isLogin ? '로그인' : '회원가입'}\r\n          </FormButton>\r\n        </AuthForm>\r\n        \r\n        <ToggleFormText>\r\n          {isLogin ? \"계정이 없으신가요?\" : \"이미 계정이 있으신가요?\"}\r\n          <ToggleFormButton type=\"button\" onClick={toggleForm} disabled={isLoading}>\r\n            {isLogin ? '회원가입' : '로그인'}\r\n          </ToggleFormButton>\r\n        </ToggleFormText>\r\n        \r\n        <BackButton onClick={() => game.setCurrentScreen('title')} disabled={isLoading}>\r\n          메인으로 돌아가기\r\n        </BackButton>\r\n      </AuthContainer>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst AuthContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 2rem;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  margin-bottom: 2rem;\r\n  text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\r\n  font-family: 'Noto Serif', serif;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  background-color: rgba(255, 0, 0, 0.2);\r\n  border: 1px solid rgba(255, 0, 0, 0.5);\r\n  color: #ff6666;\r\n  padding: 0.75rem 1rem;\r\n  border-radius: 4px;\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AuthForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  margin-bottom: 1.5rem;\r\n`;\r\n\r\nconst FormField = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst FormLabel = styled.label`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #ffffff;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 4px;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: rgba(255, 255, 255, 0.6);\r\n    box-shadow: 0 0 8px rgba(255, 255, 255, 0.3);\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #ffffff;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 4px;\r\n  padding: 0.75rem;\r\n  font-size: 1.1rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  margin-top: 0.5rem;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background-color: rgba(40, 40, 40, 0.8);\r\n    border-color: rgba(255, 255, 255, 0.6);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  &:active:not(:disabled) {\r\n    transform: translateY(0);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ToggleFormText = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin-bottom: 2rem;\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nconst ToggleFormButton = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: #66aaff;\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  text-decoration: underline;\r\n  padding: 0;\r\n  \r\n  &:hover:not(:disabled) {\r\n    color: #99ccff;\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst BackButton = styled.button`\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n  color: #ffffff;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 4px;\r\n  padding: 0.5rem 1rem;\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background-color: rgba(40, 40, 40, 0.6);\r\n    border-color: rgba(255, 255, 255, 0.4);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.7;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nexport default AuthScreen;","import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Game container component - main interface for the game\r\nconst GameContainer = ({ children, backgroundImage: $backgroundImage }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  // Update dimensions on resize\r\n  useEffect(() => {\r\n    const updateDimensions = () => {\r\n      // We keep the function for resize handling but don't store dimensions\r\n      // since they're not used elsewhere in the component\r\n    };\r\n\r\n    // Initial dimensions\r\n    updateDimensions();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', updateDimensions);\r\n\r\n    // Clean up\r\n    return () => {\r\n      window.removeEventListener('resize', updateDimensions);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <BackgroundLayer $backgroundImage={$backgroundImage} />\r\n      <ContentLayer>{children}</ContentLayer>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst BackgroundLayer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: ${props => props.$backgroundImage ? `url(${props.$backgroundImage})` : 'none'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  filter: brightness(0.7); /* Darken the background for better text readability */\r\n  transition: background-image 1s ease-in-out;\r\n  \r\n  /* Fallback background if no image is provided */\r\n  background-color: ${props => props.$backgroundImage ? 'transparent' : '#121212'};\r\n`;\r\n\r\nconst ContentLayer = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end; /* Position content at the bottom */\r\n  align-items: center;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default GameContainer;\r\n"],"names":["AuthContainer","styled","div","Title","h1","ErrorMessage","AuthForm","form","FormField","FormLabel","label","FormInput","input","FormButton","button","ToggleFormText","ToggleFormButton","BackButton","AuthScreen","game","useGame","isLogin","setIsLogin","useState","email","setEmail","password","setPassword","displayName","setDisplayName","error","setError","isLoading","setIsLoading","useEffect","currentBgm","soundEffects","playMusic","volume","applyAtmosphericEffect","getErrorMessage","code","_jsx","GameContainer","backgroundImage","children","_jsxs","onSubmit","async","e","preventDefault","authService","login","user","getCurrentUser","setPlayerName","setCurrentScreen","register","playSfx","console","type","value","onChange","target","required","disabled","maxLength","onClick","toggleForm","Container","BackgroundLayer","props","$backgroundImage","ContentLayer","_ref","containerRef","useRef","updateDimensions","window","addEventListener","removeEventListener","ref"],"sourceRoot":""}