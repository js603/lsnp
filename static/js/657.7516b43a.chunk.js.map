{"version":3,"file":"static/js/657.7516b43a.chunk.js","mappings":"yIAIA,MA+BMA,EAAYC,EAAAA,GAAOC,GAAG;;;;;;;;;EAWtBC,EAAkBF,EAAAA,GAAOC,GAAG;;;;;;sBAMZE,GAASA,EAAMC,iBAAmB,OAAOD,EAAMC,oBAAsB;;;;;;;sBAOrED,GAASA,EAAMC,iBAAmB,cAAgB;EAGlEC,EAAeL,EAAAA,GAAOC,GAAG;;;;;;;;;;;EAa/B,EAvEsBK,IAAsD,IAArD,SAAEC,EAAUC,gBAAiBJ,GAAkBE,EACpE,MAAMG,GAAeC,EAAAA,EAAAA,QAAO,MAqB5B,OAlBAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAmBA,OAYzB,OAHAC,OAAOC,iBAAiB,SAAUF,GAG3B,KACLC,OAAOE,oBAAoB,SAAUH,KAEtC,KAGDI,EAAAA,EAAAA,MAACjB,EAAS,CAACkB,IAAKR,EAAaF,SAAA,EAC3BW,EAAAA,EAAAA,KAAChB,EAAe,CAACE,iBAAkBA,KACnCc,EAAAA,EAAAA,KAACb,EAAY,CAAAE,SAAEA,O,6FCvBrB,MAqDMY,EAAiBnB,EAAAA,GAAOC,GAAG;;;;;;;;;EAW3BmB,EAAQpB,EAAAA,GAAOqB,EAAE;;;;;;EAQjBC,EAAWtB,EAAAA,GAAOuB,EAAE;;;;;;;EASpBC,EAAgBxB,EAAAA,GAAOC,GAAG;;;;;;EAQ1BwB,EAAazB,EAAAA,GAAO0B,MAAM;;;;;;;;;;;;;;;;;;;;;EAwB1BC,EAAc3B,EAAAA,GAAOC,GAAG;;;;;;EAQ9B,EAzHoB2B,KAClB,MAAMC,GAAOC,EAAAA,EAAAA,OACNC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAGjDtB,EAAAA,EAAAA,WAAU,KACR,MAAMuB,EAAYC,aAAaC,QAAQ,mBACvCJ,IAAkBE,IAGjB,IAcH,OACEhB,EAAAA,EAAAA,KAACmB,EAAAA,EAAa,CAAA9B,UACZS,EAAAA,EAAAA,MAACG,EAAc,CAAAZ,SAAA,EACbW,EAAAA,EAAAA,KAACE,EAAK,CAAAb,SAAC,2CACPW,EAAAA,EAAAA,KAACI,EAAQ,CAAAf,SAAC,2CAEVS,EAAAA,EAAAA,MAACQ,EAAa,CAAAjB,SAAA,EACZW,EAAAA,EAAAA,KAACO,EAAU,CAACa,QAlBOC,KAEzBV,EAAKW,gBAgByCjC,SAAC,wBACxCwB,IACCb,EAAAA,EAAAA,KAACO,EAAU,CAACa,QAdKG,KAEzBZ,EAAKa,iBAAiB,SAY0BnC,SAAC,8BAE3CW,EAAAA,EAAAA,KAACO,EAAU,CAACa,QAASA,KACnBT,EAAKa,iBAAiB,SACtBnC,SAAC,mDACHW,EAAAA,EAAAA,KAACO,EAAU,CAACa,QAASA,KACnBT,EAAKa,iBAAiB,aACtBnC,SAAC,kBACHW,EAAAA,EAAAA,KAACO,EAAU,CAACa,QAASA,KACnBT,EAAKa,iBAAiB,YACtBnC,SAAC,2BAGLW,EAAAA,EAAAA,KAACS,EAAW,CAAApB,SAAC,4C","sources":["components/game/GameContainer.js","components/screens/TitleScreen.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Game container component - main interface for the game\r\nconst GameContainer = ({ children, backgroundImage: $backgroundImage }) => {\r\n  const containerRef = useRef(null);\r\n\r\n  // Update dimensions on resize\r\n  useEffect(() => {\r\n    const updateDimensions = () => {\r\n      // We keep the function for resize handling but don't store dimensions\r\n      // since they're not used elsewhere in the component\r\n    };\r\n\r\n    // Initial dimensions\r\n    updateDimensions();\r\n\r\n    // Add event listener for window resize\r\n    window.addEventListener('resize', updateDimensions);\r\n\r\n    // Clean up\r\n    return () => {\r\n      window.removeEventListener('resize', updateDimensions);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <BackgroundLayer $backgroundImage={$backgroundImage} />\r\n      <ContentLayer>{children}</ContentLayer>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst BackgroundLayer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: ${props => props.$backgroundImage ? `url(${props.$backgroundImage})` : 'none'};\r\n  background-size: cover;\r\n  background-position: center;\r\n  filter: brightness(0.7); /* Darken the background for better text readability */\r\n  transition: background-image 1s ease-in-out;\r\n  \r\n  /* Fallback background if no image is provided */\r\n  background-color: ${props => props.$backgroundImage ? 'transparent' : '#121212'};\r\n`;\r\n\r\nconst ContentLayer = styled.div`\r\n  position: relative;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end; /* Position content at the bottom */\r\n  align-items: center;\r\n  padding: 2rem;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default GameContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useGame } from '../../contexts/GameContext';\r\nimport GameContainer from '../game/GameContainer';\r\n\r\n// Title screen component\r\nconst TitleScreen = () => {\r\n  const game = useGame();\r\n  const [showContinue, setShowContinue] = useState(false);\r\n  \r\n  // Check if there's a saved game\r\n  useEffect(() => {\r\n    const savedGame = localStorage.getItem('pigeonweed_save');\r\n    setShowContinue(!!savedGame);\r\n    \r\n    // 오디오 초기화 및 재생 코드 제거됨\r\n  }, []);\r\n  \r\n  // Handle start new game\r\n  const handleStartNewGame = () => {\r\n    // 오디오 관련 코드 제거\r\n    game.startNewGame();\r\n  };\r\n  \r\n  // Handle continue game\r\n  const handleContinueGame = () => {\r\n    // 오디오 관련 코드 제거\r\n    game.setCurrentScreen('game');\r\n  };\r\n  \r\n  return (\r\n    <GameContainer>\r\n      <TitleContainer>\r\n        <Title>비둘기밥의 밤</Title>\r\n        <Subtitle>비둘기밥의 밤</Subtitle>\r\n        \r\n        <MenuContainer>\r\n          <MenuButton onClick={handleStartNewGame}>새 게임</MenuButton>\r\n          {showContinue && (\r\n            <MenuButton onClick={handleContinueGame}>이어하기</MenuButton>\r\n          )}\r\n          <MenuButton onClick={() => {\r\n            game.setCurrentScreen('auth');\r\n          }}>로그인 / 회원가입</MenuButton>\r\n          <MenuButton onClick={() => {\r\n            game.setCurrentScreen('settings');\r\n          }}>설정</MenuButton>\r\n          <MenuButton onClick={() => {\r\n            game.setCurrentScreen('credits');\r\n          }}>제작진</MenuButton>\r\n        </MenuContainer>\r\n        \r\n        <VersionInfo>v0.1.0 - 알파 버전</VersionInfo>\r\n      </TitleContainer>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\n// Styled components\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  padding: 2rem;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4rem;\r\n  margin-bottom: 0.5rem;\r\n  text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\r\n  font-family: 'Noto Serif', serif;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nconst Subtitle = styled.h2`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 3rem;\r\n  opacity: 0.8;\r\n  text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);\r\n  font-family: 'Noto Sans', sans-serif;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  width: 100%;\r\n  max-width: 300px;\r\n`;\r\n\r\nconst MenuButton = styled.button`\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  color: #ffffff;\r\n  border: 1px solid rgba(255, 255, 255, 0.3);\r\n  border-radius: 4px;\r\n  padding: 1rem;\r\n  font-size: 1.2rem;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease;\r\n  \r\n  &:hover {\r\n    background-color: rgba(40, 40, 40, 0.8);\r\n    border-color: rgba(255, 255, 255, 0.6);\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  &:active {\r\n    transform: translateY(0);\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\n\r\nconst VersionInfo = styled.div`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  right: 1rem;\r\n  font-size: 0.8rem;\r\n  opacity: 0.5;\r\n`;\r\n\r\nexport default TitleScreen;\r\n"],"names":["Container","styled","div","BackgroundLayer","props","$backgroundImage","ContentLayer","_ref","children","backgroundImage","containerRef","useRef","useEffect","updateDimensions","window","addEventListener","removeEventListener","_jsxs","ref","_jsx","TitleContainer","Title","h1","Subtitle","h2","MenuContainer","MenuButton","button","VersionInfo","TitleScreen","game","useGame","showContinue","setShowContinue","useState","savedGame","localStorage","getItem","GameContainer","onClick","handleStartNewGame","startNewGame","handleContinueGame","setCurrentScreen"],"sourceRoot":""}